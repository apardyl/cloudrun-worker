#!/bin/bash

source /etc/cloudrun/worker.conf

RO_DIR="$WORK_DIR/fs"
RW_DIR="$WORK_DIR/rw"
RW_TMP_DIR="$WORK_DIR/tmp"

ssh-keygen -A -f /etc/cloudrun/override

function host-network-up () (
    set -e
    ip link add name cloudrun-int type bridge
    ip link set cloudrun-int up
    ip address add 172.30.30.1/30 dev cloudrun-int
)

function host-network-down () (
    ip link set cloudrun-int down
    ip link delete cloudrun-int type bridge
)

function generate-configs () (
    set -e
    sed -E 's/^([^:]*).*/\1:!!:17752::::::/' < "$RO_DIR"/etc/passwd > "$ROOT_DIR"/etc/shadow
    ln -sf /etc/systemd/system/sshd-cloudrun.service "$ROOT_DIR"/etc/systemd/system/multi-user.target.wants/sshd-cloudrun.service
)

function cleanup () {
    lxc-stop -n cloudrun -P /etc/cloudrun/lxc -k
    umount "$ROOT_DIR"
    fusermount -u "$RO_DIR"
    host-network-down
    exit
}

echo "Starting cloudrun-worker"

trap cleanup SIGTERM SIGINT SIGHUP EXIT

mkdir -p "$RO_DIR" "$RW_DIR"  "$RW_TMP_DIR" "$ROOT_DIR"
if [ $? -ne 0 ]; then
    echo "ERROR: Unable to create work directories"
    exit
fi

echo "Setting up internal network"
host-network-up
if [ $? -ne 0 ]; then
    echo "ERROR: Unable to setup internal network"
    exit
fi

echo "Mounting cloudrun-fs"
ulimit -n 102400
cloudrun-fs "$FS_META_FILE" "$HASH_STORE_DIR" "$PRIVATE_STORE_DIR" "$FILE_SERVER" "$RO_DIR"&
sleep 4
if [ $? -ne 0 ]; then
    echo "ERROR: Unable to mount cloudrun-fs"
    exit
fi

echo "Mounting overlay"
mount -t overlay overlay -o lowerdir=/etc/cloudrun/override:"$RO_DIR",upperdir="$RW_DIR",workdir="$RW_TMP_DIR" "$ROOT_DIR"
if [ $? -ne 0 ]; then
    echo "ERROR: Unable to mount overlay"
    exit
fi

echo "Generating configs"
generate-configs
if [ $? -ne 0 ]; then
    echo "ERROR: Unable to generate configs"
    exit
fi

echo "Starting lxc"
lxc-start -n cloudrun -P /etc/cloudrun/lxc
if [ $? -ne 0 ]; then
    echo "ERROR: Unable to start the container"
    exit
fi

function waitonline () {
    while ! timeout 0.5 bash -c "echo > /dev/tcp/172.30.30.2/22022"; do
        sleep 0.5
    done
}

export -f waitonline

echo "Waiting for sshd to start"
timeout 30 bash -c "waitonline" > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "ERROR: Unable to start ssh server"
    exit
fi

echo "Worker started"

read
